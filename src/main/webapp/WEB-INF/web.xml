<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

  <!--配置的名称-->
  <display-name>Archetype Created Web Application</display-name>


  <!--通过加载 applicationContext.xml 对web和spring容器进行整合加载-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath*:/applicationContext.xml,
      classpath*:/applicationContext-datasource.xml
    </param-value>
  </context-param>



  <!--字符集编码的过滤器：设置所有的请求都走CharacterEncodingFilter 这个类-->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern><!--请求类型-->
  </filter-mapping>

  <!--以下session模式只可以存在其中一个,CYQ-->
  <!--二期重置session的时间过滤器-->
  <filter>
    <filter-name>SessionExpireFilter</filter-name>
    <filter-class>com.mmall.controller.common.SessionExpireFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>SessionExpireFilter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>

  <!--springSession零侵入式框架-->
  <!--<filter>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>-->


  <!--对web和spring容器进行监听的容器：继承底层的事件监听机制-->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>

  <!--监听web容器的关闭和 启动(可选)-->
  <!--<listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>-->



  <!--加载SpringMvc的-中央调度处理器-->
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup><!-->=0的时候,随容器启动而初始化-->
  </servlet>


  <!--设置映射器-->
  <!--<servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>-->

  <!--为了改造restful需要自定义springmvc拦截http请求的方式-->
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>

